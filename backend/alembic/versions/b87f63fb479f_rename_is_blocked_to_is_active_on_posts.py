"""Rename is_blocked to is_active on posts

Revision ID: b87f63fb479f
Revises: b04e75e88c00
Create Date: 2025-09-08 13:18:33.384617

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b87f63fb479f'
down_revision: Union[str, None] = 'b04e75e88c00'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('comments_user_id_fkey', 'comments', type_='foreignkey')
    op.drop_constraint('comments_post_id_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'posts', ['post_id'], ['id'], source_schema='boom_blog', referent_schema='boom_blog')
    op.create_foreign_key(None, 'comments', 'users', ['user_id'], ['id'], source_schema='boom_blog', referent_schema='boom_blog')
    op.drop_constraint('likes_user_id_fkey', 'likes', type_='foreignkey')
    op.drop_constraint('likes_post_id_fkey', 'likes', type_='foreignkey')
    op.create_foreign_key(None, 'likes', 'users', ['user_id'], ['id'], source_schema='boom_blog', referent_schema='boom_blog')
    op.create_foreign_key(None, 'likes', 'posts', ['post_id'], ['id'], source_schema='boom_blog', referent_schema='boom_blog')
    op.add_column('posts', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.drop_constraint('posts_author_id_fkey', 'posts', type_='foreignkey')
    op.create_foreign_key(None, 'posts', 'users', ['author_id'], ['id'], source_schema='boom_blog', referent_schema='boom_blog')
    op.drop_column('posts', 'is_blocked')
    op.drop_constraint('views_user_id_fkey', 'views', type_='foreignkey')
    op.drop_constraint('views_post_id_fkey', 'views', type_='foreignkey')
    op.create_foreign_key(None, 'views', 'users', ['user_id'], ['id'], source_schema='boom_blog', referent_schema='boom_blog')
    op.create_foreign_key(None, 'views', 'posts', ['post_id'], ['id'], source_schema='boom_blog', referent_schema='boom_blog')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'views', schema='boom_blog', type_='foreignkey')
    op.drop_constraint(None, 'views', schema='boom_blog', type_='foreignkey')
    op.create_foreign_key('views_post_id_fkey', 'views', 'posts', ['post_id'], ['id'])
    op.create_foreign_key('views_user_id_fkey', 'views', 'users', ['user_id'], ['id'])
    op.add_column('posts', sa.Column('is_blocked', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'posts', schema='boom_blog', type_='foreignkey')
    op.create_foreign_key('posts_author_id_fkey', 'posts', 'users', ['author_id'], ['id'])
    op.drop_column('posts', 'is_active')
    op.drop_constraint(None, 'likes', schema='boom_blog', type_='foreignkey')
    op.drop_constraint(None, 'likes', schema='boom_blog', type_='foreignkey')
    op.create_foreign_key('likes_post_id_fkey', 'likes', 'posts', ['post_id'], ['id'])
    op.create_foreign_key('likes_user_id_fkey', 'likes', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'comments', schema='boom_blog', type_='foreignkey')
    op.drop_constraint(None, 'comments', schema='boom_blog', type_='foreignkey')
    op.create_foreign_key('comments_post_id_fkey', 'comments', 'posts', ['post_id'], ['id'])
    op.create_foreign_key('comments_user_id_fkey', 'comments', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
